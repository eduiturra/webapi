// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.data;

namespace webapi.data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("webapi.core.Models.ArchivoMateriales", b =>
                {
                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idArchivo");

                    b.ToTable("archivoMateriales");
                });

            modelBuilder.Entity("webapi.core.Models.Archivos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Indice")
                        .HasColumnType("int");

                    b.Property<string>("Preview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("idCarpeta")
                        .HasColumnType("int");

                    b.Property<int>("idTipoArchivo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idCarpeta");

                    b.HasIndex("idTipoArchivo");

                    b.ToTable("archivos");
                });

            modelBuilder.Entity("webapi.core.Models.ArchivosLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.Property<string>("idUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idArchivo");

                    b.ToTable("archivosLog");
                });

            modelBuilder.Entity("webapi.core.Models.ArchivosTipo", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("archivosTipo");
                });

            modelBuilder.Entity("webapi.core.Models.ArchivoMateriales", b =>
                {
                    b.HasOne("webapi.core.Models.Archivos", "Archivos")
                        .WithOne("ArchivoMateriales")
                        .HasForeignKey("webapi.core.Models.ArchivoMateriales", "idArchivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webapi.core.Models.Archivos", b =>
                {
                    b.HasOne("webapi.core.Models.Archivos", "Carpeta")
                        .WithMany("ArchivosHijos")
                        .HasForeignKey("idCarpeta");

                    b.HasOne("webapi.core.Models.ArchivosTipo", "ArchivosTipo")
                        .WithMany("Archivos")
                        .HasForeignKey("idTipoArchivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webapi.core.Models.ArchivosLog", b =>
                {
                    b.HasOne("webapi.core.Models.Archivos", "Archivos")
                        .WithMany("ArchivosLog")
                        .HasForeignKey("idArchivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
